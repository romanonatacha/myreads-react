{"version":3,"sources":["icons/loader.gif","components/Book.js","utils/BooksAPI.js","components/SearchBook.js","components/BookShelf.js","components/Library.js","utils/Helper.js","components/Loader.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Book","options","key","title","handleShelf","event","preventDefault","book","_this","props","shelf","target","value","onMoveShelf","_this$props$book","this","authors","imageLinks","smallThumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","concat","onChange","disabled","map","_ref","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","SearchBook","state","clearBooks","setState","updateQuery","trim","error","myBooks","searchBook","find","myBook","catch","_this2","Link","to","process","type","placeholder","components_Book","BookShelf","_this$props","Library","shelves","Map","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","get","push","err","return","allMyBooks","toConsumableArray","_ref2","slicedToArray","components_BookShelf","Loader","src","require","alt","BooksApp","loading","BooksAPI","result","currentState","filter","b","components_Loader","Route","exact","path","render","components_Library","components_SearchBook","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b398a1bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.9afc09a0.gif\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass Book extends Component {\n\n    static propTypes = {\n        book: PropTypes.object,\n        onMoveShelf: PropTypes.func.isRequired,\n    }\n\n    options = [\n        { key: 'currentlyReading', title: 'Currently Reading' },\n        { key: 'wantToRead', title: 'Want to Read' },\n        { key: 'read', title: 'Read' }\n    ]\n\n    handleShelf = (event) => {\n        event.preventDefault()\n        const { book } = this.props\n        book.shelf = event.target.value\n        this.props.onMoveShelf(book)\n    }\n\n\n    render() {\n\n        const { title, authors, imageLinks, shelf } = this.props.book\n        const smallThumbnail = imageLinks ? imageLinks.smallThumbnail : ''\n\n\n        return (\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${smallThumbnail})` }}></div>\n                        <div className=\"book-shelf-changer\">\n                            <select value={shelf} onChange={this.handleShelf} >\n                                <option value=\"none\" disabled>Move to...</option>\n                                {this.options.map(({ key, title }) => (\n                                    <option key={key} value={key}>{title}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{title}</div>\n                    <div className=\"book-authors\">{authors}</div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default Book","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Book from '../components/Book'\nimport PropTypes from 'prop-types'\nimport { search } from '../utils/BooksAPI'\n\nclass SearchBook extends Component {\n\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        onMoveShelf: PropTypes.func.isRequired,\n    }\n\n    state = {\n        books: []\n    }\n\n    clearBooks = () => {\n        this.setState(() => ({\n            books: []\n        }))\n    }\n\n\n    updateQuery = (query) => {\n        query = query.trim()\n\n        search(query)\n            .then((books) => {\n                if (books.error)\n                    return []\n\n                const myBooks = this.props.books\n                return books.map((book) => {\n                    const searchBook = myBooks.find((myBook) => myBook.id === book.id)\n                    book.shelf = searchBook ? searchBook.shelf : 'none'\n                    return book;\n                })\n            })\n            .then((books) => {\n                this.setState(() => ({\n                    books\n                }))\n            }).catch(() => {\n                this.clearBooks();\n            })\n    }\n\n    render() {\n\n        const { books } = this.state\n        const { onMoveShelf } = this.props\n        \n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to={process.env.PUBLIC_URL + \"/\"}>Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\" placeholder=\"Search by title or author\"\n                            onChange={(event) => this.updateQuery(event.target.value)} />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {books.map((book) => (\n                            <Book key={book.id} book={book} onMoveShelf={onMoveShelf} />\n                        ))}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBook","import React, { Component } from 'react'\nimport Book from '../components/Book'\nimport PropTypes from 'prop-types'\n\n\nclass BookShelf extends Component {\n\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        title: PropTypes.string,\n    }\n\n    render() {\n\n        const { title, books } = this.props\n\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{title}</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {books.map((book) =>\n                        <Book key={book.id} book={book}\n                        onMoveShelf={this.props.onMoveShelf} />\n                    )}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BookShelf","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport BookShelf from '../components/BookShelf'\nimport PropTypes from 'prop-types'\nimport { allMyBooks } from '../utils/Helper'\n\nclass Library extends Component {\n\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        onMoveShelf: PropTypes.func.isRequired\n    }\n\n    render() {\n\n        const shelves = allMyBooks(this.props.books);\n\n        return (\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n                        {[...shelves].map(([key, value]) =>\n                            <BookShelf\n                                key={key}\n                                title={value.title}\n                                books={value.books}\n                                onMoveShelf={this.props.onMoveShelf}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className=\"open-search\">\n                    <Link to={process.env.PUBLIC_URL + \"/search\"}>Add a book</Link>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Library","\nexport const allMyBooks = (myBooks) => {\n    const shelves = new Map();\n    shelves.set('currentlyReading', { title: 'Currently Reading', books: [] })\n    shelves.set('wantToRead', { title: 'Want To Read', books: [] })\n    shelves.set('read', { title: 'Read', books: [] })\n\n    for (let book of myBooks) {\n        const shelf = shelves.get(book.shelf)\n        shelf.books.push(book)\n    }\n    return shelves\n}  ","import React from 'react'\n\nconst Loader = () => { \n    return (\n        <div className=\"loader\"> \n            <img src={require('../icons/loader.gif')} alt=\"loading...\" />\n        </div>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport SearchBook from './components/SearchBook';\nimport Library from './components/Library';\nimport Loader  from './components/Loader'\nimport * as BooksAPI from './utils/BooksAPI';\n\nclass BooksApp extends React.Component {\n\n  state = {\n    books: [],\n    loading: true\n  }\n\n  onMoveShelf = (book) => {\n    BooksAPI.update(book, book.shelf)\n    .then((result) => {\n      this.setState((currentState) => ({\n        books: currentState.books.filter((b) => b.id !== book.id)\n      }))\n\n      if (book.shelf !== 'none')\n        this.setState((currentState) => ({\n          books: currentState.books.concat([book])\n        }))\n    })\n  }\n\n  async componentDidMount() {\n    const books = await BooksAPI.getAll()\n    this.setState(() => ({ books, loading: false}))\n  }\n\n  render() {\n\n    if (this.state.loading) \n     return <Loader />\n\n    return (\n      <div className=\"app\">\n        <Route exact path={process.env.PUBLIC_URL + \"/\"} render={() => (\n          <Library books={this.state.books} onMoveShelf={this.onMoveShelf} />\n        )} />\n        <Route exact path={process.env.PUBLIC_URL + \"/search\"} render={() => (\n          <SearchBook books={this.state.books} onMoveShelf={this.onMoveShelf} />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'))\n"],"sourceRoot":""}